객체지향 설계의 목표 -> 적절한 책임을 수행하는 객체들의 협력을 기반으로 결합도가 낮고
재사용 가능한 코드 구조를 창조 하는것

-> 설계를 재사용할수있는점( 객체지향의 장점)

핸드폰 과금 시스템 변경하기

-고정 요금방식, 시간대별 방식, 요일별 방식, 구간별 방식

시간대별 -> 시작시간 종료시간 뿐만 아니라 (날짜까지 신경써야된다.)
각요소를 저장하는 다수의 list

요일별 -> 요일별로 알아서 구현
규칙을 구현 하는 독립적인 객체

구간별 -> 기본정책을 상속 받아 사용(코드 재사용을 위한 상속은 해로움)

-> 유사한 기능을 서로다른 방식으로 구현하면 안된다.

2. 설계에 일관성 부여하기

일관성 있는 협력을 위한 지침
1. 변하는 개념을 변하지 않는 개념으로 부터 분리하라
- 영화 예매 시스템의 할인 조건 할인 정책 -> 추상 클래스와 인터페이스로 구현
2. 변하는 개념을 캡슐화 하라
- 할인정책의 캡슐화 (추상화를 찾아 의존하도록)

3. 일관성 있는 기본 정책 구현하기

변하는 부분과 변하지 않는 부분으로 분리
